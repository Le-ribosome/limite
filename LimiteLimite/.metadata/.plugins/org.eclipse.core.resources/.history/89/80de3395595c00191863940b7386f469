package fr.formation.jeu;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import fr.formation.cartes.Paquet;
import fr.formation.joueur.Joueur;

public class Partie {
    protected int nombreJoueur = 0;
    protected List<Joueur> joueursDansLaPartie = new ArrayList<Joueur>();
    protected Paquet paquet;
    private int nombreToursJoues=0;

    public Partie() {
    	
    }

    public Partie(Paquet p, Joueur... j) {
        this.paquet = p;
        this.joueursDansLaPartie.addAll(Arrays.asList(j));
        this.nombreJoueur = this.joueursDansLaPartie.size();
        
        //Melange des cartes
        Collections.shuffle(this.paquet.getPaquetCartesMots());
        Collections.shuffle(this.paquet.getPaquetCartesPhrases());

        //Distribuer trois cartes à tous les joueurs dans la partie: 
        this.distribuer(3);
        
        System.out.println("La partie est bien lanc�e, il y a "+this.nombreJoueur+" joueurs : \n");
        for (Joueur jou: joueursDansLaPartie) {
			System.out.println(jou.getPseudo()+"\n");
		}

       
    }
    //Si la partie n'a pas commencé, possible de rajouter des joueurs dans une partie créée
    //Le recalcul du nombre de joueur se fait alors
    public void ajouterJoueurs(Joueur... j) {
    	if (nombreToursJoues>0) {
			System.out.println("Personne ne rejoins une partie commencée !");
			return;
		}
    	else {
    	       this.joueursDansLaPartie.addAll(Arrays.asList(j));
    	       this.nombreJoueur = this.joueursDansLaPartie.size();
		}

    }

    public void distribuer(int combienDeCartesDistribuer) {
        for(Joueur j : this.joueursDansLaPartie) {
        	for (int i = 0; i < combienDeCartesDistribuer; i++) {
        		//Ajoute une carte dans la main du joueur
        		j.getMain().add(this.paquet.getPaquetCartesMots().get(0));
        		//Enlève cette carte du paquet
                this.paquet.getPaquetCartesMots().remove(0);
			}
        }

    }

    public void ajouterPaquet(Paquet p) {
        this.paquet = p;
    }

    public void melangerPaquets() {
        Collections.shuffle(this.paquet.getPaquetCartesMots());
        Collections.shuffle(this.paquet.getPaquetCartesPhrases());
    }

    
    
    public Paquet getPaquet() {
		return paquet;
	}

	public void setPaquet(Paquet paquet) {
		this.paquet = paquet;
	}

	public int getNombreToursJoues() {
		return nombreToursJoues;
	}

	public void setNombreToursJoues(int nombreToursJoues) {
		this.nombreToursJoues = nombreToursJoues;
	}

	public int getNombreJoueur() {
        return this.nombreJoueur;
    }

    public void setNombreJoueur(int nombreJoueur) {
        this.nombreJoueur = nombreJoueur;
    }

    public List<Joueur> getJoueursDansLaPartie() {
        return this.joueursDansLaPartie;
    }

    public void setJoueursDansLaPartie(List<Joueur> joueursDansLaPartie) {
        this.joueursDansLaPartie = joueursDansLaPartie;
    }
}