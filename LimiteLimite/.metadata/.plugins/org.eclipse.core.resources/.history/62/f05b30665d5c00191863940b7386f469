package fr.formation.dao.hibernate;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import fr.formation.cartes.CartePhrase;
import fr.formation.dao.IDAOCartePhrase;
import fr.formation.factory.DBFactory;

public class DAOCartePhraseSQL implements IDAOCartePhrase {


	public List<CartePhrase> findAll() {
List<CartePhrase> mesCartesphrases = new ArrayList<CartePhrase>();
		
		try {
			//On ex�cute la requ�te, et on r�cup�re le r�sultat
			ResultSet myResult = DBFactory.createResultSet("SELECT * FROM CartePhrase");
			
			//Pour chaque ligne de r�sultat de la requ�te
			while (myResult.next()) {
				CartePhrase maCartePhrase = new CartePhrase();

				maCartePhrase.setId(myResult.getInt("CPH_ID"));
				maCartePhrase.setTemps(myResult.getInt("CPH_TEMPS"));
				maCartePhrase.setPoints(myResult.getInt("CPH_POINTS"));
				maCartePhrase.setPhrase(myResult.getString("CPH_PHRASE"));
				maCartePhrase.setNbTrous(myResult.getInt("CPH_NB_TROU"));
				
				//On ajoute le produit � la liste
				mesCartesphrases.add(maCartePhrase);
			}
		}

		catch (SQLException e) { //Oups, erreurs SQL ...
			e.printStackTrace();
		}
		
		
		return mesCartesphrases;
	}

	
	public CartePhrase findById(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	
	public CartePhrase save(CartePhrase entity) {

			try {
				
				if(entity.getId()==0) {
				//On pr�pare ce qui va nous servir � r�aliser une requ�te SQL
				DBFactory.execute("INSERT INTO CartePhrase"
						+ " (CPH_TEMPS, CPH_CATEGORIE, CPH_POINTS, CPH_PHRASE, CPH_NB_TROU)"
						+ " VALUES (?, ?, ?,?,?)",
				
				//Associer les valeurs du produit � la requ�te
				entity.getTemps(),
				entity.getPoints(),
				entity.getPhrase(),
				entity.getNbTrous());
				
				}
				else { 
				DBFactory.execute("UPDATE produit"
						+ " (CPH_TEMPS=?, CPH_CATEGORIE=?, CPH_POINTS=?, CPH_PHRASE=?, CPH_NB_TROU=?)"
						+ " VALUES ( ?, ?,?,?,?) WHERE CPH_ID =?",
					
				//Associer les valeurs du produit � la requ�te
				entity.getTemps(),
				entity.getPoints(),
				entity.getPhrase(),
				entity.getNbTrous());	
				}

			}

			catch (Exception e) { //Oups, erreurs SQL ...
				e.printStackTrace();
			}
			
			
			return entity;
	}

	
	public void delete(CartePhrase entity) {
		// TODO Auto-generated method stub
		try {
			DBFactory.execute("DELETE FROM CartePhrase WHERE CAT_ID = ?", entity.getId());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	
	public void deleteById(int id) {
		// TODO Auto-generated method stub
		try {
			DBFactory.execute("DELETE FROM CartePhrase where CAT_ID = ?", id);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
